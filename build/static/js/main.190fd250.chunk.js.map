{"version":3,"sources":["features/modal/modalSlice.ts","icons/CloseIcon.jsx","icons/SearchIcon.tsx","features/cities/citiesSlice.ts","icons/AddIcon.tsx","components/ModalListItem.tsx","components/CityModal.tsx","icons/BookmarkIcon.tsx","components/BookmarkButton.tsx","components/WeatherData.tsx","components/CityCard.tsx","pages/Home.tsx","components/CityItem.tsx","components/ListOfCities.tsx","components/MapLocation.tsx","icons/RefreshIcon.tsx","components/UpdateWeather.tsx","components/WeatherInfoCard.tsx","pages/Cities.tsx","icons/GlobeIcon.tsx","icons/HomeIcon.tsx","components/Header.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["modalSlice","createSlice","name","initialState","status","reducers","showModal","state","hideModal","actions","currentStatus","modal","CloseIcon","xmlns","className","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","SearchIcon","citiesSlice","selectedCities","weatherInfoOfCity","addToList","action","payload","bookmarked","selected","removeFromBookmarks","objIndex","findIndex","obj","id","addToBookmarks","updateSelectedCity","map","data","weatherData","addWeatherInfoOfCity","allSelectedCities","cities","AddIcon","ModalListItem","content","dispatch","useDispatch","currentCitiesList","useSelector","onClick","find","alert","loc","location","url","axios","get","then","res","city","CityModal","modalStatus","searchInputRef","useRef","useState","cityArray","filteredCityArray","setFilteredCityArray","placeholder","type","ref","onChange","e","preventDefault","filter","item","toLowerCase","indexOf","current","value","length","BookmarkIcon","BookmarkButton","cityId","WeatherData","icon","weather","weather_forecast","main","temp","humidity","wind_speed","wind","speed","src","alt","Math","round","CityCard","Home","CityItem","ListOfCities","MapLocation","lat","lon","title","width","height","frameBorder","scrolling","marginHeight","marginWidth","RefreshIcon","fillRule","clipRule","UpdateWeather","WeatherInfoCard","coord","Object","keys","Cities","GlobeIcon","HomeIcon","Header","activeClassName","exact","to","App","path","appReducer","combineReducers","modalReducer","citiesReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","Boolean","window","hostname","match","ReactDOM","render","StrictMode","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.190fd250.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n// define interface for typescript validation\nexport interface ModalState {\n  status: Boolean;\n}\n\n// intital state of modal\nconst initialState: ModalState = {\n  status: false,\n};\n\nexport const modalSlice = createSlice({\n  name: \"modal\",\n  initialState,\n  reducers: {\n    showModal: (state: any) => {\n      state.status = true;\n    },\n    hideModal: (state: any) => {\n      state.status = false;\n    },\n  },\n});\n\nexport const { showModal, hideModal } = modalSlice.actions;\n\nexport const currentStatus = (state: any) => state.modal.status;\n\nexport default modalSlice.reducer;\n","function CloseIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M6 18L18 6M6 6l12 12\"\n      />\n    </svg>\n  );\n}\n\nexport default CloseIcon;\n","function SearchIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-5 w-5\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n      />\n    </svg>\n  );\n}\n\nexport default SearchIcon;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\n// define interface for typescript validation\nexport interface ModalState {\n  selectedCities: [];\n  weatherInfoOfCity: [];\n}\n\n// intital state of cities\nconst initialState: ModalState = {\n  selectedCities: [],\n  weatherInfoOfCity: [],\n};\n\nexport const citiesSlice = createSlice({\n  name: \"cities\",\n  initialState,\n  reducers: {\n    addToList: (state: any, action) => {\n      action.payload.bookmarked = false;\n      action.payload.selected = false;\n      state.selectedCities = [...state.selectedCities, action.payload];\n    },\n    removeFromBookmarks: (state: any, action) => {\n      const objIndex = state.selectedCities.findIndex(\n        (obj: any) => obj.id === action.payload\n      );\n      state.selectedCities[objIndex].bookmarked = false;\n      if (state.weatherInfoOfCity.id === action.payload) {\n        state.weatherInfoOfCity.bookmarked = false;\n      }\n    },\n    addToBookmarks: (state: any, action) => {\n      const objIndex = state.selectedCities.findIndex(\n        (obj: any) => obj.id === action.payload\n      );\n      state.selectedCities[objIndex].bookmarked = true;\n      if (state.weatherInfoOfCity.id === action.payload) {\n        state.weatherInfoOfCity.bookmarked = true;\n      }\n    },\n    updateSelectedCity: (state: any, action) => {\n      const objIndex = state.selectedCities.findIndex(\n        (obj: any) => obj.id === action.payload.id\n      );\n      state.selectedCities = state.selectedCities.map((data: any) => ({\n        ...data,\n        selected: false,\n      }));\n      state.selectedCities[objIndex].selected = true;\n      state.selectedCities[objIndex].weatherData = action.payload.weatherData;\n    },\n    addWeatherInfoOfCity: (state: any, action) => {\n      state.weatherInfoOfCity = action.payload;\n    },\n  },\n});\n\nexport const {\n  addToList,\n  addToBookmarks,\n  removeFromBookmarks,\n  addWeatherInfoOfCity,\n  updateSelectedCity,\n} = citiesSlice.actions;\n\nexport const allSelectedCities = (state: any) => state.cities.selectedCities;\n\nexport const weatherInfoOfCity = (state: any) => state.cities.weatherInfoOfCity;\n\nexport default citiesSlice.reducer;\n","function AddIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"inline-block h-5 w-5\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n      />\n    </svg>\n  );\n}\n\nexport default AddIcon;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { hideModal } from \"../features/modal/modalSlice\";\nimport { addToList, allSelectedCities } from \"../features/cities/citiesSlice\";\nimport AddIcon from \"../icons/AddIcon\";\n\nfunction ModalListItem({ content }: any) {\n  const dispatch = useDispatch();\n  const currentCitiesList = useSelector(allSelectedCities);\n\n  const apiKey = \"d4b9fedc669894ea03bdbbc9a08abd68\";\n\n  //   add city to list on click\n  const addCityToList = () => {\n    const cityExistInArray = currentCitiesList.find(\n      (data: any) => data.id === content.id\n    );\n\n    if (!cityExistInArray) {\n      // open weather api to get weather data\n      const loc = content.location;\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${loc}&appid=${apiKey}&units=metric`;\n      axios.get(url).then((res) => {\n        content.weatherData = res.data;\n        // dispatch function\n        dispatch(hideModal());\n        dispatch(addToList(content));\n      });\n    } else {\n      alert(\"Already exists in the list.\");\n    }\n  };\n\n  return (\n    <button\n      onClick={addCityToList}\n      className=\"flex justify-between text-left w-full p-3 my-3 rounded-md cursor-pointer border hover:bg-gray-200\"\n    >\n      <span>{content.city}</span>\n      <AddIcon />\n    </button>\n  );\n}\n\nexport default ModalListItem;\n","import { useState, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { currentStatus, hideModal } from \"../features/modal/modalSlice\";\nimport CloseIcon from \"../icons/CloseIcon\";\nimport SearchIcon from \"../icons/SearchIcon\";\nimport ModalListItem from \"./ModalListItem\";\n\ninterface citySchema {\n  id: number;\n  city: String;\n}\n\nfunction CityModal() {\n  // use selector\n  const modalStatus = useSelector(currentStatus);\n  const dispatch = useDispatch();\n\n  // define ref\n  const searchInputRef: any = useRef<HTMLInputElement>(null);\n\n  const [cityArray] = useState([\n    { id: 1, city: \"Delhi\", location: \"Delhi,IN\" },\n    { id: 2, city: \"Surat\", location: \"Surat,IN\" },\n    { id: 3, city: \"Chennai\", location: \"Chennai,IN\" },\n    { id: 4, city: \"Goa\", location: \"Goa,IN\" },\n    { id: 5, city: \"Rajasthan\", location: \"Rajasthan,IN\" },\n    { id: 6, city: \"Bihar\", location: \"Bihar,IN\" },\n    { id: 7, city: \"Hyderabad\", location: \"Hyderabad,IN\" },\n  ]);\n\n  const [filteredCityArray, setFilteredCityArray] = useState(cityArray);\n\n  const searchCity = (e: any) => {\n    e.preventDefault();\n    setFilteredCityArray(\n      cityArray.filter((item: citySchema) => {\n        return (\n          item.city\n            .toLowerCase()\n            .indexOf(searchInputRef.current.value.toLowerCase()) !== -1\n        );\n      })\n    );\n  };\n\n  //   on click close modal\n  const closeModal = () => {\n    dispatch(hideModal());\n  };\n\n  return (\n    <div className={modalStatus ? \"block\" : \"hidden\"}>\n      <div className=\"fixed top-0 left-0 w-screen h-screen bg-black bg-opacity-50\">\n        <div className=\"relative inset-1/2 transform -translate-y-1/2 -translate-x-1/2 bg-white p-10 max-w-md h-524\">\n          <div className=\"flex justify-between border-b-2 pb-3\">\n            <h2 className=\"text-2xl\">Add city Modal</h2>\n            <button onClick={closeModal} aria-label=\"Close\">\n              <CloseIcon />\n            </button>\n          </div>\n          <div className=\"relative mt-4 pb-4 border-b-2\">\n            <span className=\"absolute top-2.5 left-2\">\n              <SearchIcon />\n            </span>\n            <input\n              className=\"border rounded-md shadow-lg outline-none w-full pl-8 p-2\"\n              placeholder=\"Search city\"\n              type=\"search\"\n              name=\"search cities\"\n              ref={searchInputRef}\n              onChange={searchCity}\n            />\n          </div>\n          {filteredCityArray.length ? (\n            <div className=\"max-h-80 overflow-scroll\">\n              {filteredCityArray.map((data: citySchema) => {\n                return <ModalListItem key={data.id} content={data} />;\n              })}\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CityModal;\n","function BookmarkIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1}\n        d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\n      />\n    </svg>\n  );\n}\n\nexport default BookmarkIcon;\n","/* eslint-disable react/style-prop-object */\nimport { useDispatch } from \"react-redux\";\nimport {\n  addToBookmarks,\n  removeFromBookmarks,\n} from \"../features/cities/citiesSlice\";\nimport BookmarkIcon from \"../icons/BookmarkIcon\";\n\ninterface bookmarkSchema {\n  bookmarked: Boolean;\n  cityId: number;\n}\n\nfunction BookmarkButton({ bookmarked, cityId }: bookmarkSchema) {\n  const dispatch = useDispatch();\n\n  const cityBookmark = () => {\n    if (bookmarked) {\n      dispatch(removeFromBookmarks(cityId));\n    } else {\n      dispatch(addToBookmarks(cityId));\n    }\n  };\n\n  return (\n    <button\n      className={bookmarked ? \"p-2.5 active\" : \"p-2.5\"}\n      onClick={cityBookmark}\n      aria-label=\"Bookmark\"\n    >\n      <BookmarkIcon />\n    </button>\n  );\n}\n\nexport default BookmarkButton;\n","interface weatherSchema {\n  data: any;\n}\n\nfunction WeatherData({ data }: weatherSchema) {\n  const icon = data.weather[0].icon;\n  const weather_forecast = data.weather[0].main;\n  const temp = data.main.temp;\n  const humidity = data.main.humidity;\n  const wind_speed = data.wind.speed;\n  return (\n    <>\n      <div className=\"col-span-full\">\n        <img\n          className=\"m-auto\"\n          src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n          alt={weather_forecast}\n        />\n      </div>\n      <div>Temperature: {Math.round(temp)}°C</div>\n      <div>Humidity: {humidity}</div>\n      <div>Weather: {weather_forecast}</div>\n      <div>Wind speed: {Math.round(wind_speed * 6)} km/h</div>\n    </>\n  );\n}\n\nexport default WeatherData;\n","import BookmarkButton from \"./BookmarkButton\";\nimport WeatherData from \"./WeatherData\";\ninterface cardSchema {\n  city: String;\n  bookmarked: Boolean;\n  cityId: number;\n  weatherData: any;\n}\n\nfunction CityCard({ city, bookmarked, cityId, weatherData }: cardSchema) {\n  return (\n    <div className=\"border-2 rounded-md p-4 transition-shadow hover:shadow-xl hover:filter hover:backdrop-blur-lg cursor-pointer\">\n      <div className=\"flex justify-between items-center pb-2 border-b\">\n        <h3>{city}</h3>\n        <BookmarkButton bookmarked={bookmarked} cityId={cityId} />\n      </div>\n      <div className=\"mt-4 grid grid-cols-2 text-sm gap-4\">\n        <WeatherData data={weatherData} />\n      </div>\n    </div>\n  );\n}\n\nexport default CityCard;\n","import CityCard from \"../components/CityCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { showModal } from \"../features/modal/modalSlice\";\nimport { allSelectedCities } from \"../features/cities/citiesSlice\";\nimport AddIcon from \"../icons/AddIcon\";\n\nfunction Home() {\n  // useSleector to fetch the list of products exists\n  const cities = useSelector(allSelectedCities);\n  const dispatch = useDispatch();\n\n  const openModal = () => {\n    dispatch(showModal());\n  };\n\n  return (\n    <div className=\"pt-10\">\n      <div className=\"flex justify-between items-center text-md\">\n        <h2 className=\"text-2xl\">My Favorite cities</h2>\n        <button\n          className=\"bg-gray-50 p-3 px-6 transition text-sm rounded-sm hover:bg-yellow-100\"\n          onClick={openModal}\n        >\n          Add new City\n          <span className=\"ml-1\">\n            <AddIcon />\n          </span>\n        </button>\n      </div>\n      {cities.length ? (\n        <div className=\"grid grid-cols-3 gap-y-8 gap-x-6 mt-10\">\n          {cities.map((data: any) => {\n            return data.bookmarked ? (\n              <CityCard\n                key={data.id}\n                city={data.city}\n                cityId={data.id}\n                bookmarked={data.bookmarked}\n                weatherData={data.weatherData}\n              ></CityCard>\n            ) : (\n              \"\"\n            );\n          })}\n        </div>\n      ) : (\n        <h2 className=\"mt-24 text-2xl text-center text-gray-300\">\n          No city bookmarked\n        </h2>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n","import { useDispatch } from \"react-redux\";\nimport {\n  addWeatherInfoOfCity,\n  updateSelectedCity,\n} from \"../features/cities/citiesSlice\";\n\nfunction CityItem({ data }: any) {\n  const dispatch = useDispatch();\n\n  // // open weather api key\n  // const apiKey = \"d4b9fedc669894ea03bdbbc9a08abd68\";\n  //   on click of city show weather data\n  const showWeatherData = () => {\n    const content = { ...data, selected: true };\n    dispatch(updateSelectedCity(content));\n    dispatch(addWeatherInfoOfCity(content));\n  };\n\n  return (\n    <div\n      className={\n        data.selected\n          ? \"flex cursor-pointer hover:bg-gray-100 border rounded-lg p-3 my-3 justify-between bg-gray-200\"\n          : \"flex cursor-pointer hover:bg-gray-100 border rounded-lg p-3 my-3 justify-between\"\n      }\n      onClick={showWeatherData}\n    >\n      <h4>{data.city}</h4>\n      <span>{Math.round(data.weatherData.main.temp)}°C</span>\n    </div>\n  );\n}\n\nexport default CityItem;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { allSelectedCities } from \"../features/cities/citiesSlice\";\nimport { showModal } from \"../features/modal/modalSlice\";\nimport AddIcon from \"../icons/AddIcon\";\nimport CityItem from \"./CityItem\";\n\nfunction ListOfCities() {\n  // list of all slected cities\n  const cities = useSelector(allSelectedCities);\n  const dispatch = useDispatch();\n\n  const openModal = () => {\n    dispatch(showModal());\n  };\n\n  return (\n    <>\n      <div className=\"flex justify-between items-center pb-3 border-b mb-6\">\n        <h2 className=\"text-2xl\">Cities</h2>\n        <button\n          className=\"bg-gray-50 p-3 transition text-sm rounded-sm hover:bg-yellow-100\"\n          onClick={openModal}\n        >\n          <AddIcon />\n        </button>\n      </div>\n      {cities.length ? (\n        <div>\n          {cities.map((data: any) => {\n            return <CityItem key={data.id} data={data} />;\n          })}\n        </div>\n      ) : (\n        <h2 className=\"text-2xl text-center text-gray-300\">No city added</h2>\n      )}\n    </>\n  );\n}\n\nexport default ListOfCities;\n","interface mapSchema {\n  lat: number;\n  lon: number;\n}\n\nfunction MapLocation({ lat, lon }: mapSchema) {\n  return (\n    <div>\n      <iframe\n        title=\"maps\"\n        width=\"100%\"\n        height={600}\n        frameBorder={0}\n        scrolling=\"no\"\n        marginHeight={0}\n        marginWidth={0}\n        src={`https://maps.google.com/maps?width=100%25&height=600&hl=en&q=${lat},${lon}&t=&z=10&ie=UTF8&iwloc=B&output=embed`}\n      />\n    </div>\n  );\n}\n\nexport default MapLocation;\n","function RefreshIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-5 w-5\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n\nexport default RefreshIcon;\n","import RefreshIcon from \"../icons/RefreshIcon\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  addWeatherInfoOfCity,\n  updateSelectedCity,\n} from \"../features/cities/citiesSlice\";\nimport axios from \"axios\";\n\ninterface updateSchema {\n  data: any;\n}\n\nfunction UpdateWeather({ data }: updateSchema) {\n  const dispatch = useDispatch();\n\n  // open weather api key\n  const apiKey = \"d4b9fedc669894ea03bdbbc9a08abd68\";\n\n  const UpdateWeather = () => {\n    // open weather api to get weather data\n    const loc = data.location;\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${loc}&appid=${apiKey}&units=metric`;\n    axios.get(url).then((res) => {\n      const content = { ...data, weatherData: res.data };\n      dispatch(updateSelectedCity(content));\n      dispatch(addWeatherInfoOfCity(content));\n    });\n  };\n  return (\n    <button\n      className=\"bg-gray-50 p-3 mr-2 transition text-sm rounded-sm hover:bg-yellow-100\"\n      onClick={UpdateWeather}\n    >\n      <RefreshIcon />\n    </button>\n  );\n}\n\nexport default UpdateWeather;\n","import { useSelector } from \"react-redux\";\nimport { weatherInfoOfCity } from \"../features/cities/citiesSlice\";\nimport BookmarkButton from \"./BookmarkButton\";\nimport MapLocation from \"./MapLocation\";\nimport WeatherData from \"./WeatherData\";\nimport UpdateWeather from \"./UpdateWeather\";\n\nfunction WeatherInfoCard() {\n  const data = useSelector(weatherInfoOfCity);\n  const lat = data?.weatherData?.coord?.lat;\n  const lon = data?.weatherData?.coord?.lon;\n\n  return (\n    <>\n      {Object.keys(data).length ? (\n        <>\n          <div className=\"flex justify-between items-center pb-3 border-b mb-6\">\n            <h2 className=\"text-2xl\">{data.city}</h2>\n            <div>\n              <UpdateWeather data={data} />\n              <BookmarkButton bookmarked={data.bookmarked} cityId={data.id} />\n            </div>\n          </div>\n          <div className=\"grid grid-cols-4 gap-4 text-sm pb-3 border-b mb-4\">\n            <WeatherData data={data.weatherData} />\n          </div>\n          <MapLocation lat={lat} lon={lon} />\n        </>\n      ) : (\n        <div className=\"flex h-full items-center justify-center\">\n          <h2 className=\"text-2xl text-center text-gray-300\">\n            No city selected\n          </h2>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default WeatherInfoCard;\n","import ListOfCities from \"../components/ListOfCities\";\nimport WeatherInfoCard from \"../components/WeatherInfoCard\";\n\nfunction Cities() {\n  return (\n    <div>\n      <div className=\"grid grid-cols-12 gap-4 -mt-3 pt-10 h-screen\">\n        <div className=\"col-span-4 border-2 p-3\">\n          <ListOfCities />\n        </div>\n        <div className=\"col-span-8 border-2 p-3\">\n          <WeatherInfoCard />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Cities;\n","function GlobeIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n      />\n    </svg>\n  );\n}\n\nexport default GlobeIcon;\n","function HomeIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"h-6 w-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n      />\n    </svg>\n  );\n}\n\nexport default HomeIcon;\n","import { NavLink } from \"react-router-dom\";\nimport GlobeIcon from \"../icons/GlobeIcon\";\nimport HomeIcon from \"../icons/HomeIcon\";\n\nfunction Header(): JSX.Element {\n  return (\n    <header className=\"fixed top-0 bottom-0 bg-white shadow\">\n      <NavLink\n        className=\"block p-5 text-xs hover:bg-yellow-100 mt-8 border-b\"\n        activeClassName=\"active\"\n        exact\n        to=\"/\"\n      >\n        <HomeIcon />\n      </NavLink>\n      <NavLink\n        className=\"block p-5 text-xs hover:bg-yellow-100 border-b\"\n        activeClassName=\"active\"\n        to=\"/cities\"\n      >\n        <GlobeIcon />\n      </NavLink>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CityModal from \"./components/CityModal\";\n// import pages\nimport Home from \"./pages/Home\";\nimport Cities from \"./pages/Cities\";\n\n// import header\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <CityModal></CityModal>\n        <div className=\"ml-32 mr-16 pb-16 max-w-screen-xl\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/cities\">\n              <Cities />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport modalReducer from \"../features/modal/modalSlice\";\nimport citiesReducer from \"../features/cities/citiesSlice\";\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\"; // imports from redux-persist\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nconst appReducer = combineReducers({\n  modal: modalReducer,\n  cities: citiesReducer,\n});\n\nconst persistConfig = {\n  // configuration object for redux-persist\n  key: \"app\",\n  storage, // define which storage to use\n};\n\nconst persistedReducer = persistReducer(persistConfig, appReducer); // create a persisted reducer\n\nconst store = createStore(\n  persistedReducer, // pass the persisted reducer instead of rootReducer to createStore\n  applyMiddleware() // add any middlewares here\n);\n\nconst persistor = persistStore(store); // used to create the persisted store, persistor will be used in the next step\n\nexport { store, persistor };\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store, persistor } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}